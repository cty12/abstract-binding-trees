{-# OPTIONS --rewriting #-}
module rewriting.examples.CastBigStepResult where

open import Data.List using (List; []; _โท_; length; map)
open import Data.Maybe
open import Data.Nat
open import Data.Bool using (true; false) renaming (Bool to ๐น)
open import Data.Nat.Properties
open import Data.Product using (_,_;_ร_; projโ; projโ; ฮฃ-syntax; โ-syntax)
open import Data.Unit using (โค; tt)
open import Data.Unit.Polymorphic renaming (โค to topแต; tt to ttแต)
open import Data.Empty using (โฅ; โฅ-elim)
open import Data.Sum using (_โ_; injโ; injโ)
open import Relation.Binary.PropositionalEquality as Eq
  using (_โก_; _โข_; refl; sym; cong; subst; trans)
open import Relation.Nullary using (ยฌ_; Dec; yes; no)
open import Var
open import rewriting.examples.Cast

data Result : Set where
  val : Term โ Result
  blameR : Result
  timeout : Result

data Halt : Result โ Set where
  blameH : Halt blameR
  valueH : โ{V} โ Halt (val V)

data Exception : Result โ Set where
  blameX : Exception blameR
  timeoutX : Exception timeout

infixr 6 _โแต_
data _โแต_ : Term โ Result โ โ โ Set where
  โแตzero : โ{M} โ (M โแต timeout) zero
  
  litโแต : โ{c k} โ ($ c โแต val ($ c)) (suc k)
  
  lamโแต : โ{N k} โ (ฦ N โแต val (ฦ N)) (suc k)
  
  appโแต : โ{L M N W R k}
     โ (L โแต val (ฦ N)) k
     โ (M โแต val W) k
     โ (N [ W ] โแต R) k
       --------------------
     โ (L ยท M โแต R) (suc k)
     
  appโแต-raise-L : โ{L M E k}
     โ (L โแต E) k
     โ Exception E
       ---------------------
     โ (L ยท M โแต E) (suc k)
     
  appโแต-raise-R : โ{L M N E k}
     โ (L โแต val (ฦ N)) k
     โ (M โแต E) k
     โ Exception E
       --------------------
     โ (L ยท M โแต E) (suc k)
     
  injโแต : โ{M V G k}
     โ (M โแต val V) k
       ------------------------------------
     โ (M โจ G !โฉ โแต val (V โจ G !โฉ)) (suc k)
     
  injโแต-raise : โ{M G E k}
      โ (M โแต E) k
      โ Exception E
        -----------------------
      โ (M โจ G !โฉ โแต E) (suc k)
      
  projโแต-raise : โ{M H E k}
     โ (M โแต E) k
     โ Exception E
       -----------------------
     โ (M โจ H ?โฉ โแต E) (suc k)
     
  collapseโแต : โ{M V G k}
     โ (M โแต val (V โจ G !โฉ)) k
       ---------------------------
     โ (M โจ G ?โฉ โแต val V) (suc k)
     
  collideโแต : โ{M V G H k}
     โ (M โแต val (V โจ G !โฉ)) k
     โ G โข H
       ----------------------------------
     โ (M โจ H ?โฉ โแต blameR) (suc k)
     
  blameโแต : โ{k} โ (blame โแต blameR) (suc k)

โแต-value : โ V โ Value V โ โ[ k ] (V โแต val V) k
โแต-value .(ฦ N) (ฦฬฌ N) = 1 , lamโแต
โแต-value .($ c) ($ฬฌ c) = 1 , litโแต
โแต-value (V โจ G !โฉ) (v โฉ G โช)
    with โแต-value V v
... | k , VโแตV = suc k , injโแต VโแตV 

โแต-to-value : โ {M}{V}{k} โ (M โแต val V) k โ Value V
โแต-to-value litโแต = $ฬฌ _
โแต-to-value lamโแต = ฦฬฌ _
โแต-to-value (appโแต LโแตฮปN MโแตW N[W]โแตV) = โแต-to-value N[W]โแตV
โแต-to-value (injโแต MโแตV) = (โแต-to-value MโแตV) โฉ _ โช
โแต-to-value (collapseโแต MโแตV)
    with โแต-to-value MโแตV
... | v โฉ _ โช = v

โแต-determ : โ{M}{R}{Rโฒ}{k}
  โ (M โแต R) k
  โ (M โแต Rโฒ) k
    ------
  โ R โก Rโฒ 
โแต-determ {M} โแตzero โแตzero = refl
โแต-determ {.($ _)} litโแต litโแต = refl
โแต-determ {.(ฦ _)} lamโแต lamโแต = refl
โแต-determ {.(_ ยท _)} (appโแต LโแตฮปN MโแตW NWโแตR) (appโแต LโแตฮปNโฒ MโแตWโฒ NWโฒโแตRโฒ)
    with โแต-determ LโแตฮปN LโแตฮปNโฒ | โแต-determ MโแตW MโแตWโฒ
... | refl | refl = โแต-determ NWโแตR NWโฒโแตRโฒ
โแต-determ {.(_ ยท _)} (appโแต LโแตฮปN MโแตW NWโแตR) (appโแต-raise-L LโแตE ex)
    with โแต-determ LโแตฮปN LโแตE | ex
... | refl | ()
โแต-determ {.(_ ยท _)} (appโแต LโแตฮปN MโแตW NWโแตR) (appโแต-raise-R LโแตฮปNโฒ MโแตE ex)
    with โแต-determ MโแตW MโแตE | ex
... | refl | ()
โแต-determ {.(_ ยท _)} (appโแต-raise-L LโแตE ex) (appโแต LโแตฮปNโฒ MโแตW NWโฒโแตEโฒ)
    with โแต-determ LโแตE LโแตฮปNโฒ | ex
... | refl | ()
โแต-determ {.(_ ยท _)} (appโแต-raise-L LโแตE ex) (appโแต-raise-L LโแตEโฒ exโฒ) =
    โแต-determ LโแตE LโแตEโฒ
โแต-determ {.(_ ยท _)} (appโแต-raise-L LโแตE ex) (appโแต-raise-R LโแตฮปNโฒ MโแตEโฒ exโฒ)
    with โแต-determ LโแตE LโแตฮปNโฒ | ex
... | refl | ()
โแต-determ {.(_ ยท _)} (appโแต-raise-R LโแตฮปN MโแตE ex) (appโแต LโแตฮปNโฒ MโแตWโฒ NWโฒโแตRโฒ)
    with โแต-determ MโแตE MโแตWโฒ | ex
... | refl | ()
โแต-determ {.(_ ยท _)} (appโแต-raise-R LโแตฮปN MโแตE ex) (appโแต-raise-L LโแตE exโฒ)
    with โแต-determ LโแตฮปN LโแตE | exโฒ
... | refl | ()
โแต-determ {.(_ ยท _)} (appโแต-raise-R LโแตฮปN MโแตE ex) (appโแต-raise-R LโแตฮปNโฒ MโแตEโฒ exโฒ) =
    โแต-determ MโแตE MโแตEโฒ
โแต-determ {.(_ โจ _ !โฉ)} (injโแต MโแตV) (injโแต MโแตVโฒ)
    with โแต-determ MโแตV MโแตVโฒ
... | refl = refl
โแต-determ {.(_ โจ _ !โฉ)} (injโแต MโแตV) (injโแต-raise MโแตEโฒ exโฒ)
    with โแต-determ MโแตV MโแตEโฒ | exโฒ
... | refl | ()
โแต-determ {.(_ โจ _ !โฉ)} (injโแต-raise MโแตE ex) (injโแต MโแตVโฒ)
    with โแต-determ MโแตE MโแตVโฒ | ex
... | refl | ()
โแต-determ {.(_ โจ _ !โฉ)} (injโแต-raise MโแตE ex) (injโแต-raise MโแตEโฒ exโฒ) =
    โแต-determ MโแตE MโแตEโฒ
โแต-determ {.(_ โจ _ ?โฉ)} (projโแต-raise MโแตE ex) (projโแต-raise MโแตEโฒ exโฒ) =
    โแต-determ MโแตE MโแตEโฒ
โแต-determ {.(_ โจ _ ?โฉ)} (projโแต-raise MโแตE ex) (collapseโแต MโแตVโฒ)
    with โแต-determ MโแตE MโแตVโฒ | ex
... | refl | ()
โแต-determ {.(_ โจ _ ?โฉ)} (projโแต-raise MโแตE ex) (collideโแต MโแตBโฒ x)
    with โแต-determ MโแตE MโแตBโฒ | ex
... | refl | ()
โแต-determ {.(_ โจ _ ?โฉ)} (collapseโแต MโแตV) (projโแต-raise MโแตEโฒ exโฒ)
    with โแต-determ MโแตV MโแตEโฒ | exโฒ
... | refl | ()
โแต-determ {.(_ โจ _ ?โฉ)} (collapseโแต MโแตV) (collapseโแต MโแตVโฒ)
    with โแต-determ MโแตV MโแตVโฒ
... | refl = refl
โแต-determ {.(_ โจ _ ?โฉ)} (collapseโแต MโแตV) (collideโแต MโแตBโฒ neq)
    with โแต-determ MโแตV MโแตBโฒ
... | refl = โฅ-elim (neq refl)
โแต-determ {.(_ โจ _ ?โฉ)} (collideโแต MโแตB neq) (projโแต-raise MโแตRโฒ exโฒ)
    with โแต-determ MโแตB MโแตRโฒ | exโฒ
... | refl | ()
โแต-determ {.(_ โจ _ ?โฉ)} (collideโแต MโแตB neq) (collapseโแต MโแตRโฒ)
    with โแต-determ MโแตB MโแตRโฒ
... | refl = โฅ-elim (neq refl)
โแต-determ {.(_ โจ _ ?โฉ)} (collideโแต MโแตB neq) (collideโแต MโแตRโฒ neqโฒ) = refl
โแต-determ {.blame} blameโแต blameโแต = refl

โแตval-upClosed : โ{M}{V}{j}{k}
   โ (M โแต val V) j
   โ j โค k
   โ (M โแต val V) k
โแตval-upClosed {.($ _)} {.($ _)} {.(suc _)} {.(suc _)} litโแต (sโคs jโคk) = litโแต
โแตval-upClosed {.(ฦ _)} {.(ฦ _)} {.(suc _)} {.(suc _)} lamโแต (sโคs jโคk) = lamโแต
โแตval-upClosed {L ยท M} {V} {suc j} {suc k} (appโแต{N = N}{W} LโแตฮปNj MโแตWj NWโแตV)
   (sโคs jโคk) =
   appโแต (โแตval-upClosed LโแตฮปNj jโคk) (โแตval-upClosed MโแตWj jโคk)
        (โแตval-upClosed NWโแตV jโคk)
โแตval-upClosed {M โจ _ !โฉ} {.(_ โจ _ !โฉ)} {suc j} {suc k} (injโแต MโแตVj) (sโคs jโคk) =
   injโแต (โแตval-upClosed MโแตVj jโคk)
โแตval-upClosed {.(_ โจ _ ?โฉ)} {V} {suc j} {suc k} (collapseโแต MโแตVj) (sโคs jโคk) =
   collapseโแต (โแตval-upClosed MโแตVj jโคk)

โแตblame-upClosed : โ{M}{j}{k}
   โ (M โแต blameR) j
   โ j โค k
   โ (M โแต blameR) k
โแตblame-upClosed {.(_ ยท _)} {suc j} {suc k} (appโแต LโแตฮปN MโแตW NWโแตb) (sโคs jโคk) =
    appโแต (โแตval-upClosed LโแตฮปN jโคk) (โแตval-upClosed MโแตW jโคk)
         (โแตblame-upClosed NWโแตb jโคk)
โแตblame-upClosed {.(_ ยท _)} {suc j} {suc k} (appโแต-raise-L Lโแตb ex) (sโคs jโคk) =
    appโแต-raise-L (โแตblame-upClosed Lโแตb jโคk) ex
โแตblame-upClosed {.(_ ยท _)} {suc j} {suc k} (appโแต-raise-R LโแตฮปN Mโแตb ex) (sโคs jโคk) =
    appโแต-raise-R (โแตval-upClosed LโแตฮปN jโคk) (โแตblame-upClosed Mโแตb jโคk) ex
โแตblame-upClosed {.(_ โจ _ !โฉ)} {suc j} {suc k} (injโแต-raise Mโแตb ex) (sโคs jโคk) =
    injโแต-raise (โแตblame-upClosed Mโแตb jโคk) ex
โแตblame-upClosed {.(_ โจ _ ?โฉ)} {suc j} {suc k} (projโแต-raise Mโแตb ex) (sโคs jโคk) =
    projโแต-raise (โแตblame-upClosed Mโแตb jโคk) ex
โแตblame-upClosed {.(_ โจ _ ?โฉ)} {suc j} {suc k} (collideโแต MโแตV x) (sโคs jโคk) =
    collideโแต (โแตval-upClosed MโแตV jโคk) x
โแตblame-upClosed {.blame} {suc j} {suc k} blameโแต (sโคs jโคk) =
    blameโแต

โแตhalt-upClosed : โ{M}{R}{j}{k}
   โ (M โแต R) j
   โ Halt R
   โ j โค k
   โ (M โแต R) k
โแตhalt-upClosed {M} {.blameR} {j} {k} MโR blameH jโคk = โแตblame-upClosed MโR jโคk
โแตhalt-upClosed {M} {.(val _)} {j} {k} MโR valueH jโคk = โแตval-upClosed MโR jโคk

โแตval-down : โ{M}{V}{k}{j}
   โ (M โแต val V) k
   โ j โค k
   โ (M โแต val V) j  โ  (M โแต timeout) j
โแตval-down {M} {V} {k} {zero} MโV jโคk = injโ โแตzero
โแตval-down {.($ _)} {.($ _)} {suc k} {suc j} litโแต (sโคs jโคk) = injโ litโแต
โแตval-down {.(ฦ _)} {.(ฦ _)} {suc k} {suc j} lamโแต (sโคs jโคk) = injโ lamโแต
โแตval-down {.(_ ยท _)} {V} {suc k} {suc j} (appโแต LโฮปN MโW NWโV) (sโคs jโคk)
    with โแตval-down LโฮปN jโคk
... | injโ Lโ = injโ (appโแต-raise-L Lโ timeoutX)
... | injโ LโฮปNj
    with โแตval-down MโW jโคk
... | injโ Mโ = injโ (appโแต-raise-R LโฮปNj Mโ timeoutX)
... | injโ MโWj
    with โแตval-down NWโV jโคk
... | injโ NWโVj = injโ (appโแต LโฮปNj MโWj NWโVj)
... | injโ NWโ = injโ (appโแต LโฮปNj MโWj NWโ)
โแตval-down {.(_ โจ _ !โฉ)} {.(_ โจ _ !โฉ)} {suc k} {suc j} (injโแต MโV) (sโคs jโคk)
    with โแตval-down MโV jโคk
... | injโ MโVโฒ = injโ (injโแต MโVโฒ)
... | injโ Mโ = injโ (injโแต-raise Mโ timeoutX)
โแตval-down {.(_ โจ _ ?โฉ)} {V} {suc k} {suc j} (collapseโแต MโV) (sโคs jโคk)
    with โแตval-down MโV jโคk
... | injโ MโV! = injโ (collapseโแต MโV!)
... | injโ Mโ = injโ (projโแต-raise Mโ timeoutX)

โแตtimeout-downClosed : โ{M}{k}{j}
   โ (M โแต timeout) k
   โ j โค k
   โ (M โแต timeout) j
โแตtimeout-downClosed {M} {zero} {.zero} Mโk zโคn = โแตzero
โแตtimeout-downClosed {M} {suc k} {.zero} Mโk zโคn = โแตzero
โแตtimeout-downClosed {.(_ ยท _)} {suc k} {suc j} (appโแต LโฮปN MโW NWโ)(sโคs jโคk)
    with โแตval-down LโฮปN jโคk
... | injโ Lโ = appโแต-raise-L Lโ timeoutX
... | injโ LโฮปNj
    with โแตval-down MโW jโคk
... | injโ Mโ = appโแต-raise-R LโฮปNj Mโ timeoutX
... | injโ MโWj = appโแต LโฮปNj MโWj (โแตtimeout-downClosed NWโ jโคk)
โแตtimeout-downClosed {_} {suc k} {suc j} (appโแต-raise-L Lโ ex) (sโคs jโคk) =
    appโแต-raise-L (โแตtimeout-downClosed Lโ jโคk) ex
โแตtimeout-downClosed {_} {suc k} {suc j} (appโแต-raise-R LโฮปN Mโ ex) (sโคs jโคk)
    with โแตval-down LโฮปN jโคk
... | injโ Lโ = appโแต-raise-L Lโ timeoutX
... | injโ LโฮปNj = appโแต-raise-R LโฮปNj (โแตtimeout-downClosed Mโ jโคk) ex
โแตtimeout-downClosed {_} {suc k} {suc j} (injโแต-raise Mโk ex) (sโคs jโคk) =
    injโแต-raise (โแตtimeout-downClosed Mโk jโคk) ex
โแตtimeout-downClosed {_} {suc k} {suc j} (projโแต-raise Mโk ex) (sโคs jโคk) =
    projโแต-raise (โแตtimeout-downClosed Mโk jโคk) ex


โแต-value-eq : โ{V}{R}{k} โ Value V โ (V โแต R) k โ R โก val V
โแต-value-eq {V}{R}{k} v VโR
    with โแต-value V v
... | j , VโVj
    with j โค? k
... | yes lt
    with โแต-determ VโR (โแตval-upClosed VโVj lt)
... | refl = refl
โแต-value-eq {V}{R}{k} v VโR | j , VโVj
    | no nlt
    with R
... | timeout = {!!}
... | blameR
    with โแต-determ VโVj (โแตblame-upClosed VโR (<โโค (โฐโ> nlt)))
... | ()
โแต-value-eq {V}{R}{k} v VโR | j , VโVj | no nlt
    | val W
    with โแต-determ VโVj (โแตval-upClosed VโR (<โโค (โฐโ> nlt)))
... | refl = refl



-- -- injโ-inv : โ{M G} โ M โจ G !โฉ โโ โ M โโ
-- -- injโ-inv {M}{G} MGโ k
-- --     with MGโ (suc k)
-- -- ... | injโ Mโk = Mโk

-- -- values-dont-diverge : โ{V} โ Value V โ V โโ โ โฅ
-- -- values-dont-diverge {V} v Vโ
-- --     with Vโ (suc zero) | v
-- -- ... | injโ{M = Vโฒ} Vโฒโ0 | vโฒ โฉ _ โช = values-dont-diverge vโฒ (injโ-inv Vโ)

-- -- --blame-eval-not-value : โ{V} โ blame โแต V โ โฅ
-- -- --blame-eval-not-value {V} 
-- -- --blame-eval-not-value {V} 

-- -- blame-doesnt-diverge : blame โโ โ โฅ
-- -- blame-doesnt-diverge bโ
-- --     with bโ 1
-- -- ... | ()


